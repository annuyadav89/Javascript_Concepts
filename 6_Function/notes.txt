 //  Functions are the main “building blocks” of the program.
 //  They allow the code to be called many times without repetition. 
 //  Set of repetative task we can write inside the function 
 //  function is nothing but a set of code written in one block 
//   function name should start will small case.

 1. Function Declaration : 
              function showMessage() {
                  alert( 'Hello everyone!' );
                }

         // calling this function by using :  showMessage();  
        //  This function is a standalone application
        //  function name should be present
        //  This function you can call before and after function declaration.

==================================================================================================

 2. Function Expression :
              let sayHi = function() {
               alert( "Hello" );
             };
                
     //  if we assign a function with =  (to the right side of =), this is a Function Expression.
     //  function expression a function without name 
    //  function is declare inside the variable 
    //  you can call the function only after declaration.
   //  while declaring you can use let or const
   //  const is best way to declare a function 

=====================================================================================================

4.first class function 
     // first class function if function in that language are treated like other variable
example:
      const display = function(fullName,age){
        console.log(fullName,age);
    }
    display("suresh",33);

=======================================================================================================

4. Function with parameters

 function name(parameter1, parameter2, ... parameterN) {
 // body
 }

   // we are passing input values to the function 
  // you can pass any number of parameters 
  // you can pass any datatype

  //  A parameter is the variable listed inside the parentheses in the function declaration (it’s a declaration time term).
  //  An argument is the value that is passed to the function when it is called (it’s a call time term).
  //  showMessage(1,2,.....n);

======================================================================================================

 5. Return Keyword

          // function is returning an value.
          // function can return anything
          // we need an variable to store return value of a function 
         //   The return statement terminates the execution of a function and returns a value to the caller.
         //   When you use return inside a function, the function stops running immediately and hands control back to the higher context (the code that called the function).
 
 Syntax : return value;
   //  The value is optional. If omitted, the function returns undefined.

   // The return statement should be the last statement in a function because any code after it won’t be accessible.
  //  You can use return to specify the value that the function should produce as a final result.

================================================================================================================

5.callback function
//A function is call after sometime. 
example:
function addition(a,b,callback){
          let result = a+b;
          callback(result)
    }

    function display(result){
        console.log("The final value is",result);
    }
   addition(44,56,display)